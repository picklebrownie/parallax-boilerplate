/*
    parallax.css

    this file contains all of the css to control the parallax behavior of both the text and the backdrops
    tailwindcss doesnt play well with nested css, that's why we've defined class attributes as so.

    ----------------------------------------------------------------

    Scale Equation: 
    1 + [ (translate Z value * -1) / perspective value ]

    -----------------------------------------------------------------

    Layer Naming Convention

        > base

    -- Higher Levels (Layer Up)

        > fore-ish
        > fore
        > fore-most

    -- Lower Levels (Layer Down)

        > hind-ish
        > hind
        > hind-most

    -----------------------------------------------------------------

    The hardest part of implementing parallax is to know which layers can or cannot fit together...
    I'm slowly but surely finding solutions. Here are my thoughts below

    let's establish some common terminology first...
        let's call these parallax classes "depth" (example: the first backdrop-layer has depth of base)
        layers with the 'fore' depth will be the high layers, with fore-most being the highest
        layers with the 'hind' depth will be the low layers, with hind-most being the lowest

    Possible Theories...
        if the preceeding parallax-group sibling is of a higher depth, you may use any lower depth for the layer
        if the preceeding parallax-group sibling is of lower depth...

    Stuff I know works...
        alternating the backdrop depth from base to hind-most to base to hind-most etc
        (the backdrops work best when there is two backdrop layers to pick from)
        (the physics get a bit intense when you add another and not just winging it)

    Possible research topics:
        the actual physics/maths behind parallax


*/

.parallax-wrapper {
    height: 100vh;
    -ms-scroll-snap-type: y var(--tw-scroll-snap-strictness);
        scroll-snap-type: y var(--tw-scroll-snap-strictness);
    overflow-y: auto;
    overflow-x: hidden;
    perspective: 300px;
    perspective-origin-x: 100%;
    -ms-scroll-snap-type: y mandatory;
        scroll-snap-type: y mandatory;
    /* to remove the scroll snap, remove the line above and 'snap-y' in the @apply */
}

/* 
    to use only parallax text and not the background, 
    assign the background color to the parallax-wrapper or the body. 
    then, you would not use the parallax-backdrop in each group.
    if you don't want a parallax-backdrop but you'd like the groups to be colored uniquely, 
    add the bg color to the parallax-group itself
*/
.parallax-wrapper .parallax-group {
    position: relative;
    height: 100vh;
    scroll-snap-align: center;
    scroll-margin-top: 0px;
    transform-style: preserve-3d;
}

/*
    if you use the parallax backdrop, you can use parallax text that is at lest the same depth as the backdrop.
*/
.parallax-wrapper .parallax-backdrop {
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.parallax-wrapper .parallax-group .parallax-footer {
    position: absolute;
    left: 5rem;
    right: 5rem;
    bottom: 4rem;
}

.parallax-wrapper .parallax-group .parallax-layer {
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.parallax-wrapper .parallax-group .parallax-layer .content {
    margin-left: auto;
    margin-right: auto;
    max-width: 48rem;
    overflow: hidden;
    padding: 3rem;
    font-size: 1rem;
    line-height: 1.5rem;
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 640px) {

    .parallax-wrapper .parallax-group .parallax-layer .content {
        border-radius: 0.5rem;
    }

    .parallax-wrapper .parallax-group .parallax-layer .content {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }
}

@media (min-width: 1024px) {

    .parallax-wrapper .parallax-group .parallax-layer .content {
        padding-left: 5rem;
        padding-right: 5rem;
    }
}

.parallax-wrapper .parallax-group .parallax-title {
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    font-size: 2.25rem;
    font-weight: 600;
    line-height: 1.75rem;
}

/*
    we are currently displaying the title and the icon at two different depths. 
    because the title and icon are aligned at the top of the parallax-group, 
    the Z translations of these titles can look different in each group depending on the depth of the title or icon. therefore, we need to establish different margins for different depths
*/
.parallax-wrapper .parallax-group .parallax-title.base {
    margin-top: 8rem;
}

.parallax-wrapper .parallax-group .parallax-title.fore-most {
    margin-top: 5rem;
}

.parallax-wrapper .parallax-group .parallax-icon {
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    margin-top: 6rem;
    display: flex;
    align-items: flex-start;
    justify-content: center;
}

.parallax-wrapper .parallax-group .parallax-icon.fore-ish {
    margin-top: 5rem;
}

.parallax-wrapper .parallax-group .parallax-icon.hind {
    margin-top: 6rem;
}


/*
    below is the heart of the parallax scrolling.
    for now, we will use base and hind-most for the backdrop depths
    for all other layers in the group, we can use any depth that is higher than the backdrop
*/
.parallax-wrapper .parallax-group .base {
    transform: translateZ(0) scale(1);
}

.parallax-wrapper .parallax-group .fore-ish {
    transform: translateZ(60px) scale(.8);
}

.parallax-wrapper .parallax-group .fore {
    transform: translateZ(120px) scale(.6);
}

.parallax-wrapper .parallax-group .fore-most {
    transform: translateZ(180px) scale(.4);
}

.parallax-wrapper .parallax-group .hind-ish {
    transform: translateZ(-21px) scale(1.07);
}

.parallax-wrapper .parallax-group .hind {
    transform: translateZ(-90px) scale(1.3);
}

.parallax-wrapper .parallax-group .hind-most {
    transform: translateZ(-120px) scale(1.4);
}
